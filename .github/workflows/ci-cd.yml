name: Terraform Apply with Import

on:
  push:
    branches: [main]

jobs:
  terraform:
    name: Terraform Init & Apply with Imports
    runs-on: ubuntu-latest

    env:
      AWS_REGION: eu-north-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get AWS Account ID
        id: get-account
        run: |
          echo "AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_ENV

      - name: Terraform Init
        run: terraform init

      - name: Terraform Import existing resources
        run: |
          set -e
          terraform import aws_ecr_repository.main flask-webapp-ecr || true
          terraform import aws_iam_role.eks_cluster_role flask-eks-cluster-role || true
          terraform import aws_iam_role.eks_node_group_role flask-eks-nodegroup-role || true
          terraform import module.eks.module.kms.aws_kms_alias.this["cluster"] arn:aws:kms:${AWS_REGION}:${AWS_ACCOUNT_ID}:alias/eks/my-eks-cluster || true
          terraform import module.eks.aws_cloudwatch_log_group.this[0] /aws/eks/my-eks-cluster/cluster || true

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve
